name: 'Podcast Generator Workflow'

on:
  workflow_dispatch:
    inputs:
      method:
        description: 'Method for news fetcher'
        required: false
        default: 'crawling'
        type: string
      scraping_config:
        description: 'News Websites config'
        required: false
        default: '{}'
        type: string
      email:
        description: 'Email'
        required: false
        default: '1216414009@qq.com'  
        type: string
      be_concise:
        description: 'Be concise'
        required: false
        default: true
        type: boolean
      summary_provider:
        description: 'Which provider to use for summarization'
        required: false
        default: 'openai'
        type: string

  schedule:
    - cron: "0 1 * * *" 

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install ffmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Set up Firebase credentials
        env:
          FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
        run: |
          echo "$FIREBASE_KEY" > serviceAccountKey.json

      - name: Run Podcast Generator for Coindesk
        env:
          FIRECRAWL_API_KEY: ${{ secrets.FIRECRAWL_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DASHSCOPE_API_KEY: ${{ secrets.DASHSCOPE_API_KEY }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          COS_BUCKET: ${{ secrets.COS_BUCKET }}
          COS_PATH: ${{ secrets.COS_PATH }}
          COS_REGION: ${{ secrets.COS_REGION }}
          COS_SECRET_ID: ${{ secrets.COS_SECRET_ID }}
          COS_SECRET_KEY: ${{ secrets.COS_SECRET_KEY }}
          SUMMARY_PROVIDER: ${{ github.event.inputs.summary_provider || 'openai' }}
          SCRAPING_CONFIG: ${{ github.event.inputs.scraping_config || '{}' }}
          FETCHER_METHOD: ${{ github.event.inputs.method || 'crawling' }}
          BE_CONCISE: ${{ github.event.inputs.be_concise || 'true' }}
          CRAWL_CONFIG_FILE: news_websites_crawl_coindesk.json
        run: python main.py

      - name: Run Podcast Generator for Reuters
        env:
          FIRECRAWL_API_KEY: ${{ secrets.FIRECRAWL_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          DASHSCOPE_API_KEY: ${{ secrets.DASHSCOPE_API_KEY }}
          DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
          GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          COS_BUCKET: ${{ secrets.COS_BUCKET }}
          COS_PATH: ${{ secrets.COS_PATH }}
          COS_REGION: ${{ secrets.COS_REGION }}
          COS_SECRET_ID: ${{ secrets.COS_SECRET_ID }}
          COS_SECRET_KEY: ${{ secrets.COS_SECRET_KEY }}
          SUMMARY_PROVIDER: ${{ github.event.inputs.summary_provider || 'openai' }}
          SCRAPING_CONFIG: ${{ github.event.inputs.scraping_config || '{}' }}
          FETCHER_METHOD: ${{ github.event.inputs.method || 'crawling' }}
          BE_CONCISE: ${{ github.event.inputs.be_concise || 'true' }}
          CRAWL_CONFIG_FILE: news_websites_crawl_reuters.json
        run: python main.py

      - name: Send mail
        uses: dawidd6/action-send-mail@master
        with:
          server_address: smtp.163.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: Your Fetcher Action Complete
          body: Congratulations! You can visit https://www.chenjiating.com/news-fetcher-platform to check.
          to: ${{ github.event.inputs.email || '1216414009@qq.com' }}
          from: GitHub Actions

    environment: Tim-s-News 
